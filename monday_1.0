#!/usr/bin/env python
# -*- coding: utf-8 -*- 
# Emotional Stroop Task
# Metodisk Mekka
# @ AU Cognitive Science 2017

# import modules
from __future__ import division, print_function
from psychopy import visual, event, core, data, gui, logging

import random
import pandas as pd
import time

#import module that can make a list of file names (python-package not from psychopy)
import glob
import os


# Create popup information box
popup = gui.Dlg(title = "Participant Information")
popup.addField("Group number: ") # Empty box
popup.addField("SubjectID_left: ") # Empty box
popup.addField("SubjectID_right: ") # Empty box
popup.addField("Gender_left: ", choices=["Male", "Female"]) # Dropdown menu
popup.addField("Gender_right: ", choices=["Male", "Female"]) # Dropdown menu
popup.addField("Age_left: ")
popup.addField("Age_right: ")
popup.addField("Familiarity: ", choices = ["Not familiar with partner", "Familiar with partner"])
popup.show()
if popup.OK: # To retrieve data from popup window
    ID = popup.data 
elif popup.Cancel: # To cancel the experiment if popup is closed
    core.quit()

#########################################################################################
################################## Task ##########################################
#########################################################################################

###Texts

intro = '''
Welcome to the experiment!

instructions

press any key when you are ready...
'''

outro = '''
Thank You
'''

block_red = '''
Are there most red in the left or the right picture?
'''
block_green = '''
Are there most green in the left or the right picture?
'''
block_blue = '''
Are there most blue in the left or the right picture?
'''
block_yellow = '''
Are there most yellow in the left or the right picture?
'''

outro = '''
The experiment is done. Thank you for your participation!
'''
###Preparing experiment

#define window
win = visual.Window(fullscr = True, color = 'black', units='pix')
x, y = win.size  # for converting norm units to pix
leftward = -0.5 * x / 2  # use pix units, because the drawing window's units are pix
rightward = -1 * leftward

moreleft = -0.7 * x / 2  # use pix units, because the drawing window's units are pix
lessleft = -0.25 * x / 2  # use pix units, because the drawing window's units are pix
moreright = -1 * moreleft
lessright = -1 * lessleft

# get date for unique logfile id
date = data.getDateStr() 

# define a stop watch
stopwatch_left = core.Clock()
stopwatch_right = core.Clock()

# prepare pandas data frame for recorded data
columns = ['GroupNumber', 'SubjectID_left', 'SubjectID_right', 'Gender_left', 'Gender_right', 'Age_left', 'Age_right', 
'Familiarity', 'Block', 'Image_1', 'Image_2','Prop_red_image_1','Prop_red_image_2','Prop_yellow_image_1','Prop_yellow_image_2',
'Prop_green_image_1','Prop_green_image_2','Prop_blue_image_1','Prop_blue_image_2', 'Response_left', 'Response_right','Joint_left',
'Joint_right','Correct_left', 'Correct_right', 'RT_left', 'RT_right']

DATA = pd.DataFrame(columns=columns)


###Creating functions

# define function that shows text
def msg(txt, col):
    instructions_left = visual.TextStim(win, text=txt, color = col, height = 20, pos=(leftward, 0)) # create an instruction text
    instructions_right = visual.TextStim(win, text=txt, color = col, height = 20, pos=(rightward, 0)) # create an instruction text
    instructions_left.draw() # draw the text stimulus in a "hidden screen" so that it is ready to be presented 
    instructions_right.draw() # draw the text stimulus in a "hidden screen" so that it is ready to be presented 
    win.flip() # flip the screen to reveal the stimulus
    key=event.waitKeys(keyList = ["space", "escape"]) # wait for any key press
    if key[0] == "escape": #add escape function
        core.quit()



###Preparing stimuli

##Pictures
#make list of images in my folder
images = glob.glob("Red/*.jpeg")
print(images)
num_im = range(len(images))

#randomize the order for pictures
random.shuffle(images)

#make list of images in my folder
ratingpicture = glob.glob("RatingScales/*.jpeg")


#Prepare Fixation cross
stim_fix_left = visual.TextStim(win, '+', height = 40, pos=(leftward, 0))  # Fixation cross is just the character "+". Units are inherited from Window when not explicitly specified.
stim_fix_right = visual.TextStim(win, '+', height = 40, pos=(rightward, 0))  # Fixation cross is just the character "+". Units are inherited from Window when not explicitly specified.

##Ratings
# the item to-be-rated or respond to:
whichred_left = visual.TextStim(win, text="Which contains most red?", height=30, pos=(leftward, 100))
whichred_right = visual.TextStim(win, text="Which contains most red?", height=30, pos=(rightward, 100))

#####create stimuli

#Show introductions message
msg(intro, "white")

#Show introduction to block 
msg(block_red, "red")

#make joint decision
joint_left = visual.TextStim(win, 'Make a joint decision', pos=(leftward, 0))  
joint_right = visual.TextStim(win, 'Make a joint decision', pos=(rightward, 0)) 

for i in images:
    n = random.choice(num_im) #choosing a random number from the list with the length of images --> random pairs of images
    ###Saving procent of colour
    r_image1_3=i[6:8]
    y_image1_3=i[9:11]
    g_image1_3=i[12:14]
    b_image1_3=i[15:17]

    r_image2_4=images[n][6:8]
    y_image2_4=images[n][9:11]
    g_image2_4=images[n][12:14]
    b_image2_4=images[n][15:17]
    
    if r_image1_3!=r_image2_4:
    
    ##Show fixation cross
        stim_fix_right.draw()
        stim_fix_left.draw()
        win.flip()#flip screen
        core.wait(1.0)

    ##Left
        #Picture 1
        img1 = visual.ImageStim(win, image = i, pos=(moreleft, 0), size = (300, 500))#create visual stimuli
        #Picture 2
        img2 = visual.ImageStim(win, image = images[n], pos=(lessleft, 0), size = (300, 500))#create visual stimuli
    ##Right
        #Picture 3
        img3 = visual.ImageStim(win, image = i, pos=(lessright, 0), size = (300, 500))#create visual stimuli
        #Picture 4
        img4 = visual.ImageStim(win, image = images[n], pos = (moreright, 0), size = (300, 500))#create visual stimuli

    #Drawing picures
        img1.draw()#draw picture
        img2.draw()#draw picture
        img3.draw()#draw picture
        img4.draw()#draw picture
        win.flip()#flip screen
        core.wait(1.0)
        
###Ratings
        event.clearEvents()
        
        # create a RatingScale object:
        RatingLeft = visual.RatingScale(win, low=-5, high=5, markerStart=0, showValue=False,
            leftKeys='a', rightKeys = 'd', acceptKeys='s', acceptPreText= 'Choose', acceptText="Answer", labels=["100 %", "0", "100 %"], pos=(leftward, -y/6),
            marker='circle', name='left', scale= "Left                                  Right")
        RatingRight = visual.RatingScale(win, low=-5, high=5, markerStart=0, showValue=False,
            leftKeys='left', rightKeys = 'right', acceptKeys='down', acceptPreText= 'Choose', acceptText="Answer", labels=["100 %", "0", "100 %"], pos=(rightward, -y/6),
            marker='circle', name='right', scale= "Left                                  Right")
        
        #Showing ratings
        while RatingLeft.noResponse or RatingRight.noResponse:
            whichred_left.draw()
            whichred_right.draw()
            RatingLeft.draw()
            RatingRight.draw()
            win.flip()
            #Getting reaction time
            stopwatch_left.reset() #set clock
            stopwatch_right.reset()
            if event.getKeys(['escape']):
                core.quit()
        #Recording reaction time
        reaction_time_left = RatingLeft.getRT()
        reaction_time_right = RatingRight.getRT()
        #Recording ratings
        RatingLeftResponse = int(RatingLeft.getRating())
        RatingRightResponse = int(RatingRight.getRating())
###FEEDBACK
        #Recording correct answers
        if RatingLeftResponse < 0 and r_image1_3 > r_image2_4 or RatingLeftResponse > 0 and r_image1_3 < r_image2_4:
            Correct_left = 1
        else:
            Correct_left = 0
        if RatingRightResponse < 0 and r_image1_3 > r_image2_4 or RatingLeftResponse > 0 and r_image1_3 < r_image2_4:
            Correct_right = 1
        else:
            Correct_right = 0
        
        #Agree
        if RatingLeftResponse < 0 and RatingRightResponse < 0 :
            #set rating for joint response
            JointResponseRight = 0
            JointResponseLeft = 0
            #show agree text
            if r_image1_3 > r_image2_4:
                feedback_correct_left = visual.TextStim(win, text='You both answered correct', height = 20, pos=(leftward, 0)) # create an instruction text
                feedback_correct_right = visual.TextStim(win, text='You both answered correct', height = 20, pos=(rightward, 0)) # create an instruction text
                feedback_correct_left.draw() # draw the text stimulus in a "hidden screen" so that it is ready to be presented 
                feedback_correct_right.draw() # draw the text stimulus in a "hidden screen" so that it is ready to be presented 
                win.flip() # flip the screen to reveal the stimulus
                core.wait(2)
        elif RatingLeftResponse > 0 and RatingRightResponse > 0:
            #set rating for joint response
            JointResponseRight = 0
            JointResponseLeft = 0
            #show agree text
            if r_image1_3 < r_image2_4:
                feedback_wrong_left = visual.TextStim(win, text='You both answered wrong', height = 20, pos=(leftward, 0)) # create an instruction text
                feedback_wrong_right = visual.TextStim(win, text='You both answered wrong', height = 20, pos=(rightward, 0)) # create an instruction text
                feedback_wrong_left.draw() # draw the text stimulus in a "hidden screen" so that it is ready to be presented 
                feedback_wrong_right.draw() # draw the text stimulus in a "hidden screen" so that it is ready to be presented 
                win.flip() # flip the screen to reveal the stimulus
                core.wait(2)
        
        #Disagree
        else:
            #choose leader
            Leader = ['left player','right player']
            ChosenLeader = random.choice(Leader)
            #LEFT LEADER
            if ChosenLeader == 'left player':
            ###Preparing feedback to left player
                #Left players rating
                YourResponse = visual.TextStim(win, "You answered", pos = (leftward, 250))
                if RatingLeftResponse == -5:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/100_left.jpeg", pos = (leftward, 200))#create visual stimuli
                elif RatingLeftResponse == -4:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/80_left.jpeg", pos = (leftward, 200 ))#create visual stimuli
                elif RatingLeftResponse == -3:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/60_left.jpeg", pos = (leftward, 200 ))#create visual stimuli
                elif RatingLeftResponse == -2:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/40_left.jpeg", pos = (leftward, 200) )#create visual stimuli
                elif RatingLeftResponse == -1:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/20_left.jpeg", pos = (leftward, 200) )#create visual stimuli
                elif RatingLeftResponse == 1:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/20_right.jpeg", pos = (leftward, 200) )#create visual stimuli
                elif RatingLeftResponse == 2:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/40_right.jpeg", pos = (leftward, 200) )#create visual stimuli
                elif RatingLeftResponse == 3:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/60_right.jpeg" , pos = (leftward, 200))#create visual stimuli
                elif RatingLeftResponse == 4:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/80_right.jpeg", pos = (leftward, 200) )#create visual stimuli
                elif RatingLeftResponse == 5:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/100_right.jpeg", pos = (leftward, 200) )#create visual stimuli


                #Right players rating
                PartnerResponse = visual.TextStim(win, "Your partner answered", pos = (leftward, 80))
                if RatingRightResponse == -5:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/100_left.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == -4:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/80_left.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == -3:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/60_left.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == -2:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/40_left.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == -1:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/20_left.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == 1:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/20_right.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == 2:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/40_right.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == 3:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/60_right.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == 4:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/80_right.jpeg", pos = (leftward, 20) )#create visual stimuli
                elif RatingRightResponse == 5:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/100_right.jpeg", pos = (leftward, 20))#create visual stimuli
            ##Joint Decision
                # create a RatingScale object:
                JointChoiceLeft = visual.RatingScale(win, low=-1, high=1, markerStart=0, labels = ["Left", "", "Right"],
                    leftKeys='a', rightKeys = 'd', acceptKeys='s', pos=(leftward, -y/6), scale = "Final decision", acceptPreText = "Choose", showValue= False,
                    marker='triangle', markerColor = 'green', size=0.85, name='left')
                            #Feedback to not Leader
                Wait = visual.TextStim(win, "Your partner is making \n\n     a joint decision", pos = (rightward, 100), height = 40)
            ###Showing feedback and joint choice rating
                event.clearEvents()
                while JointChoiceLeft.noResponse:  # show & update until a response has been made
                    joint_left.draw()
                    YourResponse.draw()
                    PartnerResponse.draw()
                    Answerfromleftplayer.draw()
                    Answerfromrightplayer.draw()
                    JointChoiceLeft.draw()
                    Wait.draw()
                    win.flip()
                    if event.getKeys(['escape']):
                        core.quit()
                #get joint rating from left leader
                JointResponseLeft = JointChoiceLeft.getRating()
                JointResponseRight = 0
            
            #RIGHT LEADER
            else:
                ###Preparing feedback to right player
                #Left players rating
                YourResponse = visual.TextStim(win, "You answered", pos = (rightward, 250))
                if RatingRightResponse == -5:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/100_left.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == -4:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/80_left.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == -3:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/60_left.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == -2:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/40_left.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == -1:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/20_left.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == 1:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/20_right.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == 2:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/40_right.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == 3:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/60_right.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == 4:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/80_right.jpeg", pos = (rightward, 200) )#create visual stimuli
                elif RatingRightResponse == 5:
                    Answerfromrightplayer = visual.ImageStim(win, image  = "RatingPictures/100_right.jpeg", pos = (rightward, 200))#create visual stimuli
                
                #Right players rating
                PartnerResponse = visual.TextStim(win, "Your partner answered", pos = (rightward, 80))
                if RatingLeftResponse == -5:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/100_left.jpeg", pos = (rightward, 20))#create visual stimuli
                elif RatingLeftResponse == -4:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/80_left.jpeg", pos = (rightward, 20 ))#create visual stimuli
                elif RatingLeftResponse == -3:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/60_left.jpeg", pos = (rightward, 20 ))#create visual stimuli
                elif RatingLeftResponse == -2:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/40_left.jpeg", pos = (rightward, 20) )#create visual stimuli
                elif RatingLeftResponse == -1:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/20_left.jpeg", pos = (rightward, 20) )#create visual stimuli
                elif RatingLeftResponse == 1:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/20_right.jpeg", pos = (rightward, 20) )#create visual stimuli
                elif RatingLeftResponse == 2:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/40_right.jpeg", pos = (rightward, 20) )#create visual stimuli
                elif RatingLeftResponse == 3:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/60_right.jpeg" , pos = (rightward, 20))#create visual stimuli
                elif RatingLeftResponse == 4:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/80_right.jpeg", pos = (rightward, 20) )#create visual stimuli
                elif RatingLeftResponse == 5:
                    Answerfromleftplayer = visual.ImageStim(win, image  = "RatingPictures/100_right.jpeg", pos = (rightward, 20) )#create visual stimuli


            ##Joint Decision
                # create a RatingScale object:
                JointChoiceRight = visual.RatingScale(win, low=-1, high=1, markerStart=0, labels = ["Left", "", "Right"],
                    leftKeys='left', rightKeys = 'right', acceptKeys='down', pos=(rightward, -y/6), scale = "Final decision", acceptPreText = "Choose", showValue= False,
                    marker='triangle', markerColor = 'green', size=0.85, name='right')
                #Feedback to not Leader
                Wait = visual.TextStim(win, "Your partner is making \n\n     a joint decision", pos = (leftward, 100), height = 40)
            ###Showing feedback and joint choice rating
                event.clearEvents()
                while JointChoiceRight.noResponse:  # show & update until a response has been made
                    joint_right.draw()
                    YourResponse.draw()
                    PartnerResponse.draw()
                    Answerfromleftplayer.draw()
                    Answerfromrightplayer.draw()
                    JointChoiceRight.draw()
                    Wait.draw()
                    win.flip()
                    if event.getKeys(['escape']):
                        core.quit()
                #get joint right rating
                JointResponseRight = JointChoiceRight.getRating()
                JointResponseLeft = 0

# append all recorded data to the pandas DATA 
    DATA = DATA.append({
        'GroupNumber': ID[0],
        'SubjectID_left': ID[1],
        'SubjectID_right': ID[2],
        'Gender_left': ID[3],
        'Gender_right': ID[4],
        'Age_left': ID[5],
        'Age_right': ID[6],
        'Familiarity': ID[7],
        'Block':1,
        'Image_1': i,
        'Image_2': images[n],
        'Prop_red_image_1': r_image1_3,
        'Prop_red_image_2': r_image2_4,
        'Prop_yellow_image_1': y_image1_3,
        'Prop_yellow_image_2': y_image2_4,
        'Prop_green_image_1' : g_image1_3,
        'Prop_green_image_2' : g_image2_4,
        'Prop_blue_image_1' : b_image1_3,
        'Prop_blue_image_2' : b_image2_4,
        'Response_left': RatingLeftResponse,
        'Response_right': RatingRightResponse,
        'Joint_left': JointResponseLeft,
        'Joint_right': JointResponseRight,
        'Correct_left': Correct_left,
        'Correct_right': Correct_right,
        'RT_left': reaction_time_left,
        'RT_right': reaction_time_right,
        
        }, ignore_index=True)
    
    # show blank screen
    stimulus = visual.TextStim(win, 'blank')
    stimulus.draw()
    win.flip()
    core.wait(0.5)


logfile_name = 'logfile_' + ID[0] + '.csv'
DATA.to_csv(logfile_name)

############# OUTPUT LOGFILE ################################
# Define output folder
OUTPUT_folder = 'metodisk_mekka'  # Log is saved to this folder. The folder is created if it does not exist (see ppc.py).

 #If folder does not exist, do create it:
if not os.path.exists(OUTPUT_folder):
    os.makedirs(OUTPUT_folder)

msg(outro, "white")
core.quit()




'''






# show instructions
#msg(intro)

# loop through trials
for i in range(len(Stimuli)):
    # choose random color from list
    col = random.choice(Colors)
    # Word
    txt = Stimuli[i]['word']
    # prepare stimulus
    stimulus = visual.TextStim(win, text=txt, color = col)
    # draw stimulus
    stimulus.draw()
    win.flip()
    # reset stop watch
    stopwatch.reset()                              #reset the clock to 0:0:0 
    # record key press
    key = event.waitKeys(keyList = ['escape', 'r', 'g', 'b', 'y'])                  # wait for any key press
    # get reaction time at key press
    reaction_time = stopwatch.getTime()            # asks the stopwatch for the time since reset and save to the variable reation_time
    
    # check if response is correct
    if key[0] == col[0]:
        correct = 1
    elif key[0] != col[0]:
        correct = 0
    elif key[0] == 'escape':
        core.quit()
        win.close()
        
    # append all recorded data to the pandas DATA 
    STROOP_DATA = STROOP_DATA.append({
        'ID': ID[0],
        'Age': ID[1],
        'Gender': ID[2],
        'Word': txt,
        'Color': col,
        'Emotional': Stimuli[i]['emotional'],
        'Valence': Stimuli[i]['valence'],
        'Sentiment': Stimuli[i]['sentiment'],
        'Correct': correct, 
        'Reaction_time': reaction_time
        }, ignore_index=True)
    
    # show blank screen
    stimulus = visual.TextStim(win, '')
    stimulus.draw()
    win.flip()
    core.wait(0.5)

print(STROOP_DATA)



logfile_name = 'logfile_{}_{}.csv'.format(ID[0],date)
STROOP_DATA.to_csv(logfile_name)

msg(outro)
core.quit()

'''